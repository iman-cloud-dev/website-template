name: Build & Deploy (No Docker)

permissions:
  contents: read

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'   # oder deine gewünschte Version
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "build" ]; then
            echo "Error: build directory not found"
            exit 1
          fi
          ls -la build/

      - name: Archive build output
        run: tar -czf build.tar.gz build/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .

      - name: Extract artifact
        run: tar -xzf build.tar.gz

      - name: Install cloudflared
        run: |
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: Deploy via SSH/rsync
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          UUID: ${{ vars.UUID }}
          PORT: ${{ vars.PORT }}
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
        run: |
          # SSH Proxy Command für Cloudflare Access
          SSH_CMD="ssh -o StrictHostKeyChecking=no -o ProxyCommand='cloudflared access ssh --hostname ssh.iman-cloud.net --id $CF_ACCESS_CLIENT_ID --secret $CF_ACCESS_CLIENT_SECRET' $SERVER_USER@ssh.iman-cloud.net"
          
          # Zielverzeichnis erstellen
          $SSH_CMD "mkdir -p /var/www/$UUID"

          # Dateien kopieren
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no -o ProxyCommand='cloudflared access ssh --hostname ssh.iman-cloud.net --id $CF_ACCESS_CLIENT_ID --secret $CF_ACCESS_CLIENT_SECRET'" \
            build/ $SERVER_USER@ssh.iman-cloud.net:/var/www/$UUID/

          # Nginx Config vorbereiten (falls noch nicht vorhanden)
          $SSH_CMD "if [ ! -f /etc/nginx/sites-available/$UUID ]; then
            cat > /etc/nginx/sites-available/$UUID <<'NGINXEOF'
          server {
              listen ${PORT};
              server_name ${UUID}.iman-cloud.net;

              root /var/www/${UUID};
              index index.html;

              location / {
                  try_files \$uri /index.html;
              }

              access_log /var/log/nginx/${UUID}.access.log;
              error_log  /var/log/nginx/${UUID}.error.log;
          }
          NGINXEOF
            ln -s /etc/nginx/sites-available/$UUID /etc/nginx/sites-enabled/$UUID
          fi"

          # Nginx reload
          $SSH_CMD "sudo nginx -t && sudo systemctl reload nginx"
